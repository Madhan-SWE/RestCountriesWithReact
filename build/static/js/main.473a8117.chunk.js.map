{"version":3,"sources":["Header.js","Cards.js","Search.js","Pagination.js","App.js","index.js"],"names":["Header","props","className","Card","name","src","flag","alt","style","height","nativeName","population","region","capital","Cards","countries","itemsPerPage","currentPage","end","length","start","countriesObj","slice","role","map","country","Search","searchFn","changeNoOfItems","type","placeholder","onChange","event","searchText","target","value","id","NoOfItems","selected","Pagination","totalPages","Math","ceil","aria-label","tabIndex","onClick","changePage","pages","i","push","App","useState","setCountries","countriesAll","setCountriesAll","setCurrentPage","setItemsPersPage","useEffect","fetch","then","res","json","filter","JSON","stringify","toLowerCase","includes","changedPage","innerText","parseInt","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.473a8117.chunk.js","sourcesContent":["function Header(props) {\r\n    return <h1 className=\"text-white text-center p-4\">REST COUNTRIES</h1>;\r\n}\r\n\r\nexport default Header;\r\n","function Card({ props }) {\r\n    return (\r\n        <div className=\"col-lg-4 col-sm-6 cols\">\r\n            <div className=\"card text-center text-white bg-dark\">\r\n                <div className=\"card-header\">{props.name}</div>\r\n                <img\r\n                    className=\"card-img-top\"\r\n                    src={props.flag}\r\n                    alt={props.name}\r\n                    style={{ height: \"180px\" }}\r\n                />\r\n                <div className=\"card-body\">\r\n                    <h6>Name : {props.name}</h6>\r\n                    <h6>Native name: {props.nativeName}</h6>\r\n                    <h6>Population: {props.population}</h6>\r\n                    <h6>Region: {props.region}</h6>\r\n                    <h6>Capital: {props.capital}</h6>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction Cards(props) {\r\n    let countries = props.countries;\r\n    let itemsPerPage = props.itemsPerPage;\r\n    let currentPage = props.currentPage;\r\n\r\n    let end = currentPage * itemsPerPage;\r\n\r\n    end = end > countries.length ? countries.length : end;\r\n    let start = (currentPage - 1) * itemsPerPage;\r\n    let countriesObj = countries.slice(start, end);\r\n\r\n    if (countries.length === 0) {\r\n        return (\r\n            <div className=\"row\">\r\n                <div className=\"col-12\">\r\n                    <div\r\n                        className=\"alert alert-danger text-center text-bold \"\r\n                        role=\"alert\"\r\n                    >\r\n                        <h5>No results found !</h5>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div className=\"row bg-dark p-2\">\r\n            <div className=\"col-12\">\r\n                <div\r\n                    className=\"alert alert-success text-center text-bold \"\r\n                    role=\"alert\"\r\n                >\r\n                    <h5>{countries.length} results found</h5>\r\n                </div>\r\n            </div>\r\n            {countriesObj.map((country) => {\r\n                return <Card props={country} key={country.name} />;\r\n            })}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Cards;\r\n","function Search({ searchFn, changeNoOfItems }) {\r\n    function handleOnChanage(event) {\r\n        let searchText = event.target.value;\r\n        searchFn(searchText);\r\n    }\r\n\r\n    function handleOnChangeNoOfItems(event) {\r\n        let NoOfItems = event.target.value;\r\n        if (NoOfItems !== \"Choose items per page\") changeNoOfItems(NoOfItems);\r\n        else changeNoOfItems(6);\r\n    }\r\n    return (\r\n        <div className=\"row mb-5 mt-5 bg-dark p-2\">\r\n            <div className=\"col-8\">\r\n                <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    placeholder=\"Enter search Text Here\"\r\n                    onChange={handleOnChanage}\r\n                />\r\n            </div>\r\n            <div className=\"col-4\">\r\n                <select\r\n                    id=\"inputState\"\r\n                    className=\"form-control\"\r\n                    onChange={handleOnChangeNoOfItems}\r\n                >\r\n                    <option selected>Choose items per page</option>\r\n                    <option value=\"6\">6</option>\r\n                    <option value=\"12\">12</option>\r\n                    <option value=\"18\">18</option>\r\n                    <option value=\"24\">24</option>\r\n                    <option value=\"30\">30</option>\r\n                </select>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Search;\r\n","function Pagination(props) {\r\n    let countries = props.countries;\r\n    let itemsPerPage = props.itemsPerPage;\r\n    let currentPage = props.currentPage;\r\n    let totalPages = Math.ceil(countries.length / itemsPerPage);\r\n    let start = currentPage - 2;\r\n    let end = currentPage + 2;\r\n\r\n    if (start <= 0) {\r\n        start = 1;\r\n        end = start + 4;\r\n    }\r\n\r\n    if (end > totalPages) {\r\n        end = totalPages;\r\n    }\r\n\r\n    if (totalPages === 0) {\r\n        return <ul></ul>;\r\n    }\r\n\r\n    return (\r\n        <nav aria-label=\"Page navigation\">\r\n            <ul className=\"pagination justify-content-center\">\r\n                {(function () {\r\n                    if (currentPage === 1) {\r\n                        return (\r\n                            <li className=\"page-item disabled\" key=\"prev\">\r\n                                <a className=\"page-link\" tabIndex=\"-1\">\r\n                                    Previous\r\n                                </a>\r\n                            </li>\r\n                        );\r\n                    } else {\r\n                        return (\r\n                            <li className=\"page-item\" key=\"prev\">\r\n                                <a\r\n                                    className=\"page-link\"\r\n                                    onClick={props.changePage}\r\n                                >\r\n                                    Previous\r\n                                </a>\r\n                            </li>\r\n                        );\r\n                    }\r\n                })()}\r\n                {(function () {\r\n                    let pages = [];\r\n                    for (let i = start; i <= end; i++) {\r\n                        if (i != currentPage) {\r\n                            pages.push(\r\n                                <li className=\"page-item\">\r\n                                    <a\r\n                                        className=\"page-link\"\r\n                                        key={i}\r\n                                        onClick={props.changePage}\r\n                                    >\r\n                                        {i}\r\n                                    </a>\r\n                                </li>\r\n                            );\r\n                        } else {\r\n                            pages.push(\r\n                                <li className=\"page-item active\" key={i}>\r\n                                    <a className=\"page-link\">{i}</a>\r\n                                </li>\r\n                            );\r\n                        }\r\n                    }\r\n                    return pages;\r\n                })()}\r\n                {(function () {\r\n                    if (currentPage === totalPages) {\r\n                        return (\r\n                            <li className=\"page-item disabled\" key=\"next\">\r\n                                <a className=\"page-link\" tabIndex=\"-1\">\r\n                                    Next\r\n                                </a>\r\n                            </li>\r\n                        );\r\n                    } else {\r\n                        return (\r\n                            <li className=\"page-item\" key=\"next\">\r\n                                <a\r\n                                    className=\"page-link\"\r\n                                    onClick={props.changePage}\r\n                                >\r\n                                    Next\r\n                                </a>\r\n                            </li>\r\n                        );\r\n                    }\r\n                })()}\r\n            </ul>\r\n        </nav>\r\n    );\r\n}\r\n\r\nexport default Pagination;\r\n","import { useState, useEffect } from \"react\";\nimport Header from \"./Header.js\";\nimport Cards from \"./Cards.js\";\nimport Search from \"./Search.js\";\nimport Pagination from \"./Pagination.js\";\n\nfunction App() {\n    const [countries, setCountries] = useState([]);\n    const [countriesAll, setCountriesAll] = useState([]);\n    const [currentPage, setCurrentPage] = useState(1);\n    const [itemsPerPage, setItemsPersPage] = useState(6);\n\n    const changeOnSearch = (searchText) => {\n        let res = countries.filter((country) => {\n            return JSON.stringify(country)\n                .toLowerCase()\n                .includes(searchText.toLowerCase());\n        });\n        setCurrentPage(1);\n        setCountriesAll(res);\n    };\n\n    const changePage = (event) => {\n        let changedPage = event.target.innerText;\n\n        if (changedPage === \"Next\") {\n            setCurrentPage(currentPage + 1);\n        } else if (changedPage === \"Previous\") {\n            setCurrentPage(currentPage - 1);\n        } else {\n            changedPage = parseInt(changedPage);\n            setCurrentPage(changedPage);\n        }\n    };\n\n    const changeNoOfItems = (value) => {\n        setCurrentPage(1);\n        setItemsPersPage(value);\n    };\n    function doFetch() {\n        fetch(\"https://restcountries.eu/rest/v2/all\")\n            .then((res) => res.json())\n            .then((res) => {\n                setCountries(res);\n                setCountriesAll(res);\n            });\n    }\n\n    useEffect(doFetch, []);\n\n    return (\n        <div className=\"App pb-3\">\n            <Header />\n\n            <Search\n                searchFn={changeOnSearch}\n                changeNoOfItems={changeNoOfItems}\n            />\n            <Cards\n                countries={countriesAll}\n                itemsPerPage={itemsPerPage}\n                currentPage={currentPage}\n            />\n            <Pagination\n                countries={countriesAll}\n                itemsPerPage={itemsPerPage}\n                currentPage={currentPage}\n                changePage={changePage}\n            />\n        </div>\n    );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}